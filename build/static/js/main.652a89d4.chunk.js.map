{"version":3,"sources":["TodoComponent/Todo.js","TodoComponent/Todos.js","TodoComponent/App.js","index.js"],"names":["Todo","props","items","id","task","todo","isDone","className","role","key","onClick","markComplete","Form","Check","custom","onChange","checked","type","label","style","cursor","textDecoration","data-dismiss","aria-label","delTodo","aria-hidden","Todos","allTodos","map","item","e","LOCAL_STORAGE_KEY","ReactDOM","render","useState","todoValue","setTodoValue","todos","updateTodosList","showAlert","changeAlertState","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","handleButtonClick","newItem","uuid","previousTodos","Container","Row","Col","xs","sm","md","Alert","variant","show","value","height","event","target","placeholder","onKeyDown","Button","updatedTodo","filter","document","getElementById"],"mappings":"+RAKe,SAASA,EAAKC,GAAQ,IAAD,EACCA,EAAMC,MAAjCC,EAD0B,EAC1BA,GAAUC,EADgB,EACtBC,KAAYC,EADU,EACVA,OAUxB,OACE,kBAAC,WAAD,KACE,yBACEC,UAAU,gFACVC,KAAK,SAEL,yBACEC,IAAKN,EACLO,QAAS,kBAAMT,EAAMU,aAAaR,KAElC,kBAACS,EAAA,EAAKC,MAAN,CACEN,UAAU,UACVO,QAAM,EACNC,SAAU,aACVC,QAASV,EACTH,GAAIA,EACJc,KAAM,WACNC,MACE,4BAAQX,UAAU,OAAOY,MAxB5B,CACLC,OAAQ,UACRC,eAAgBf,EAAS,eAAiB,SAuB/BF,GAGLM,QAAS,kBAAMT,EAAMU,aAAaR,OAGtC,4BACEc,KAAK,SACLV,UAAU,QACVe,eAAa,QACbC,aAAW,QACXb,QAAS,kBAAMT,EAAMuB,QAAQrB,IAC7BgB,MAAO,CAAEC,OAAQ,YAEjB,0BAAMK,cAAY,QAAlB,WC7CK,SAASC,EAAMzB,GAC5B,IAAI0B,EAAW,GACf,IACE,IAAK,IAAIlB,KAAOR,EACd0B,EAAW1B,EAAMQ,GAAKmB,KAAI,SAAAC,GACxB,OACE,kBAAC7B,EAAD,CACES,IAAKoB,EAAK1B,GACVD,MAAO2B,EACPlB,aAAcV,EAAMU,aACpBa,QAASvB,EAAMuB,aAKvB,MAAOM,IACT,OACE,yBAAKvB,UAAU,wCAAwCoB,G,qBCfrDI,EAAoB,YCD1BC,IAASC,OAAO,mBDGD,WAAgB,IAAD,EACMC,mBAAS,IADf,mBACrBC,EADqB,KACVC,EADU,OAEKF,mBAAS,IAFd,mBAErBG,EAFqB,KAEdC,EAFc,OAGUJ,oBAAS,GAHnB,mBAGrBK,EAHqB,KAGVC,EAHU,KAK5BC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQf,IAEhDW,GAAaJ,EAAgBI,KAChC,IAGHD,qBAAU,WACRI,aAAaE,QAAQhB,EAAmBY,KAAKK,UAAUX,MACtD,CAACA,IAGJ,IAQMY,EAAoB,WACxB,GAAkB,KAAdd,EAAkB,CACpB,IAAMe,EAAU,CACd/C,GAAIgD,MACJ9C,KAAM8B,EACN7B,QAAQ,GAEVgC,GAAgB,SAAAc,GACd,MAAM,GAAN,mBAAWA,GAAX,CAA0BF,OAE5Bd,EAAa,SAEbI,GAAiB,IA+BrB,OACE,kBAAC,WAAD,KACE,kBAACa,EAAA,EAAD,CAAW9C,UAAU,aACnB,wBAAIA,UAAU,uDAAd,YAIA,kBAAC+C,EAAA,EAAD,CAAK/C,UAAU,oBACb,kBAACgD,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvB,kBAACC,EAAA,EAAD,CAAOC,QAAQ,SAASrD,UAAU,YAAYsD,KAAMtB,GAApD,+BAES,KAEX,kBAACgB,EAAA,EAAD,CACEC,GAAI,GACJC,GAAI,GACJC,GAAI,EACJnD,UAAU,qCAEV,2BACEA,UAAU,uDACVU,KAAK,OACL6C,MAAO3B,EACPhB,MAAO,CAAE4C,OAAQ,QACjBhD,SA3Ec,SAAAiD,GACxB5B,EAAa4B,EAAMC,OAAOH,QACR,IAAdvB,GACFC,GAAiB,IAyET0B,YAAY,qBACZC,UApDW,SAACrC,GACR,UAAVA,EAAErB,KACJwC,QAqDI,kBAACM,EAAA,EAAD,CACEC,GAAI,GACJC,GAAI,GACJC,GAAI,EACJnD,UAAU,qCAEV,kBAAC6D,EAAA,EAAD,CACE7D,UAAU,8BACVqD,QAAQ,kBACRlD,QAASuC,GAHX,eAUN,kBAACvB,EAAD,CAAOW,MAAOA,EAAO1B,aAhEJ,SAAAR,GACnB,IAAMkE,EAAchC,EAAMT,KAAI,SAAAC,GAI5B,OAHIA,EAAK1B,KAAOA,IACd0B,EAAKvB,QAAUuB,EAAKvB,QAEfuB,KAETS,EAAgB+B,IAyDmC7C,QArDrC,SAAArB,GACdmC,EAAgB,YACXD,EAAMiC,QAAO,SAAAjE,GACd,OAAOA,EAAKF,KAAOA,aClEX,MAASoE,SAASC,eAAe,W","file":"static/js/main.652a89d4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Fragment } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nexport default function Todo(props) {\r\n  const { id, todo: task, isDone } = props.items;\r\n\r\n  // responsible for styling todo  when a todo is checked\r\n  const getStyle = () => {\r\n    return {\r\n      cursor: \"pointer\",\r\n      textDecoration: isDone ? \"line-through\" : \"none\"\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className=\"alert  alert-dismissible fade show alertBox w-75 mx-auto shadow-lg todo-color\"\r\n        role=\"alert\"\r\n      >\r\n        <div \r\n          key={id} \r\n          onClick={() => props.markComplete(id)}\r\n        >\r\n          <Form.Check\r\n            className=\"trigger\"\r\n            custom\r\n            onChange={() => {}}\r\n            checked={isDone}\r\n            id={id}\r\n            type={\"checkbox\"}\r\n            label={\r\n              <strong className=\"ml-3\" style={getStyle()}>\r\n                {task}\r\n              </strong>\r\n            }\r\n            onClick={() => props.markComplete(id)}\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"close\"\r\n          data-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n          onClick={() => props.delTodo(id)}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.css\";\r\n\r\nexport default function Todos(props) {\r\n  let allTodos = \"\";\r\n  try {\r\n    for (var key in props) {\r\n      allTodos = props[key].map(item => {\r\n        return (\r\n          <Todo\r\n            key={item.id}\r\n            items={item}\r\n            markComplete={props.markComplete}\r\n            delTodo={props.delTodo}\r\n          />\r\n        );\r\n      });\r\n    }\r\n  } catch (e) {}\r\n  return (\r\n    <div className=\"p-3 container justify-content-center\">{allTodos}</div>\r\n  );\r\n}\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.css\";\r\nimport { Button, Container, Row, Col, Alert } from \"react-bootstrap\";\r\nimport Todos from \"./Todos\";\r\nimport uuid from \"uuidv4\";\r\n\r\nconst LOCAL_STORAGE_KEY = \"TODOS_KEY\";\r\n\r\nexport default function App() {\r\n  const [todoValue, setTodoValue] = useState(\"\");\r\n  const [todos, updateTodosList] = useState([]);\r\n  const [showAlert, changeAlertState] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n    // console.log(storedTodos);\r\n    if (storedTodos) updateTodosList(storedTodos);\r\n  }, []);\r\n\r\n  // saving the todos in browser storage to prevent loss of todos on refreshing tab\r\n  useEffect(() => {\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  // handling change in input box\r\n  const handleInputChange = event => {\r\n    setTodoValue(event.target.value);\r\n    if (showAlert === true) {\r\n      changeAlertState(false);\r\n    }\r\n  };\r\n\r\n  // handling add item button to add new todo in list\r\n  const handleButtonClick = () => {\r\n    if (todoValue !== \"\") {\r\n      const newItem = {\r\n        id: uuid(),\r\n        todo: todoValue,\r\n        isDone: false\r\n      };\r\n      updateTodosList(previousTodos => {\r\n        return [...previousTodos, newItem];\r\n      });\r\n      setTodoValue(\"\");\r\n    } else {\r\n      changeAlertState(true);\r\n    }\r\n  };\r\n\r\n  // handling enter key pressed\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleButtonClick();\r\n    }\r\n  }\r\n\r\n  // responsible for changing state of a selected todo from true to false and vice versa\r\n  const markComplete = id => {\r\n    const updatedTodo = todos.map(item => {\r\n      if (item.id === id) {\r\n        item.isDone = !item.isDone;\r\n      }\r\n      return item;\r\n    });\r\n    updateTodosList(updatedTodo);\r\n  };\r\n\r\n  // handling deletion of particular todo item\r\n  const delTodo = id => {\r\n    updateTodosList([\r\n      ...todos.filter(todo => {\r\n        return todo.id !== id;\r\n      })\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container className=\"mt-3 p-3 \">\r\n        <h2 className=\" p-3 text-center header-color text-white shadow-lg \">\r\n          ToDo App\r\n        </h2>\r\n\r\n        <Row className=\"p-2 mt-3 mx-auto\">\r\n          <Col xs={12} sm={12} md={12}>\r\n            <Alert variant=\"danger\" className=\"fade show\" show={showAlert}>\r\n              Oopss!!! enter something...\r\n            </Alert>{\" \"}\r\n          </Col>\r\n          <Col\r\n            xs={12}\r\n            sm={12}\r\n            md={8}\r\n            className=\"p-3 d-flex justify-content-center\"\r\n          >\r\n            <input\r\n              className=\"  shadow form-control d-flex justify-content-center \"\r\n              type=\"text\"\r\n              value={todoValue}\r\n              style={{ height: \"50px\" }}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter Something...\"\r\n              onKeyDown={handleKeyPress}\r\n            />\r\n          </Col>\r\n          <Col\r\n            xs={12}\r\n            sm={12}\r\n            md={4}\r\n            className=\"p-3 d-flex justify-content-center\"\r\n          >\r\n            <Button\r\n              className=\"addItem btn-lg w-75 shadow \"\r\n              variant=\"outline-warning\"\r\n              onClick={handleButtonClick}\r\n            >\r\n              Add Item\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Todos todos={todos} markComplete={markComplete} delTodo={delTodo} />\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./TodoComponent/App\";\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}